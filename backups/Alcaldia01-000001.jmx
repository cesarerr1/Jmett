<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Plan de Pruebas" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Grupo de Hilos" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">150</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BUSCAR_ALCALDIA/gs-guide-websocket/info-176" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="t" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">t</stringProp>
                <stringProp name="Argument.value">1601504165053</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">demos-promad.opensystems.mx</stringProp>
          <stringProp name="HTTPSampler.port">8095</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/gs-guide-websocket/info</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-MX,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://demos-promad.opensystems.mx:9191</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BUSCAR_ALCALDIA/SIGAServiceIncident.svc/GetIncidents-181" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;idbusinessunit&quot;:5}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sigaclouddevincidentapi.promad.com.mx</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/SIGAServiceIncident.svc/GetIncidents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx/(S(4qtqtc4u1dceq52ef5puzoeb))/SIGA.aspx?token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHRlbnNpb24iOiJFWFQxIiwic2Vzc2lvblNvY2tldEFudGVyaW9yIjoiIiwicm9sZXNVc3VhcmlvIjpbeyJpZFJvbCI6IjIiLCJpZFJvbFVzdWFyaW8iOiIxMjAiLCJub21icmVSb2wiOiJST0xfT1BFUkFET1IiLCJkZXNjcmlwY2lvbiI6Ik9wZXJhZG9yIn1dLCJ1c2VyX25hbWUiOiJTSUdBMSIsIm5vbWJyZVVzdWFyaW8iOiJVU1VBUklPIiwidXVpZCI6IjUiLCJhdXRob3JpdGllcyI6WyJST0xfT1BFUkFET1IiXSwiY2xpZW50X2lkIjoiYW5ndWxhcmFwcCIsInBhcmFtZXRyb1Npc3RlbWEiOnsiY2xhdmUiOiJUSUVNUE9fTExBTUFEQV9PUEUiLCJkZXNjcmlwY2lvbiI6IlRJRU1QTyBRVUUgVEFSREFSQSBVTkEgTExBTUFEQSBBTCBPUEVSQURPUjogRUwgVkFMT1IgU09OIExPUyBTRUdVTkRPUyIsInZhbG9yIjoiMTAifSwiZGF0b3NFcXVpcG8iOnsiaWRFcXVpcG8iOjEsImlkRXh0ZW5zaW9uVGVsZWZvbmljYSI6MSwibm9tYnJlRXh0ZW5zaW9uIjoiRVhUMSJ9LCJzZXNzaW9uU29ja2V0IjoiMTc3MDEiLCJleHRDYXJieW5lIjoiMCIsImlkX3VzdWFyaW8iOiI2NCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1ODY1ODUxMDEsImp0aSI6ImU1ZjY5MjQ5LWU5MDUtNDkwNS1hNTE1LTBiZjVlMjZkZTQ3YiJ9.fgkml4mEn7zrs2sxMTikIv-IP-D0tipxLe-9g5o5LtaWNd-e_c4uKKjS9AQoT856J4BZIfhY4WmSKEXNyxnnmFto3yG2JeuzKjKG9NPpnd-Qnt97j2FB_P3ywZP5-odakTUKvjEvez_TS0U6BvJp81jA9L0ZkfK3YcY3bueHXYNpwXtLhuV5mKXWtC3MbXkvAHh9aTmlY-xVMjB-INrIf-zWZ7FzhAIPL8zPEzwWx4dClbhtJLtpBNdznTYyioTy6pC-SLdkeycw_Gxxs_vAKkhARCl4exYPuIRIGLayV_XLMrQ3UqMDL4RJrsV-Bcz1spEU8Vy7tZf7TDSzipus3w&amp;role=ROL_DESPACHO&amp;hostname=null</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-MX,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BUSCAR_ALCALDIA/(S(4qtqtc4u1dceq52ef5puzoeb))/SIGA.aspx?token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHRlbnNpb24iOiJFWFQxIiwic2Vzc2lvblNvY2tldEFudGVyaW9yIjoiIiwicm9sZXNVc3VhcmlvIjpbeyJpZFJvbCI6IjIiLCJpZFJvbFVzdWFyaW8iOiIxMjAiLCJub21icmVSb2wiOiJST0xfT1BFUkFET1IiLCJkZXNjcmlwY2lvbiI6Ik9wZXJhZG9yIn1dLCJ1c2VyX25hbWUiOiJTSUdBMSIsIm5vbWJyZVVzdWFyaW8iOiJVU1VBUklPIiwidXVpZCI6IjUiLCJhdXRob3JpdGllcyI6WyJST0xfT1BFUkFET1IiXSwiY2xpZW50X2lkIjoiYW5ndWxhcmFwcCIsInBhcmFtZXRyb1Npc3RlbWEiOnsiY2xhdmUiOiJUSUVNUE9fTExBTUFEQV9PUEUiLCJkZXNjcmlwY2lvbiI6IlRJRU1QTyBRVUUgVEFSREFSQSBVTkEgTExBTUFEQSBBTCBPUEVSQURPUjogRUwgVkFMT1IgU09OIExPUyBTRUdVTkRPUyIsInZhbG9yIjoiMTAifSwiZGF0b3NFcXVpcG8iOnsiaWRFcXVpcG8iOjEsImlkRXh0ZW5zaW9uVGVsZWZvbmljYSI6MSwibm9tYnJlRXh0ZW5zaW9uIjoiRVhUMSJ9LCJzZXNzaW9uU29ja2V0IjoiMTc3MDEiLCJleHRDYXJieW5lIjoiMCIsImlkX3VzdWFyaW8iOiI2NCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1ODY1ODUxMDEsImp0aSI6ImU1ZjY5MjQ5LWU5MDUtNDkwNS1hNTE1LTBiZjVlMjZkZTQ3YiJ9.fgkml4mEn7zrs2sxMTikIv-IP-D0tipxLe-9g5o5LtaWNd-e_c4uKKjS9AQoT856J4BZIfhY4WmSKEXNyxnnmFto3yG2JeuzKjKG9NPpnd-Qnt97j2FB_P3ywZP5-odakTUKvjEvez_TS0U6BvJp81jA9L0ZkfK3YcY3bueHXYNpwXtLhuV5mKXWtC3MbXkvAHh9aTmlY-xVMjB-INrIf-zWZ7FzhAIPL8zPEzwWx4dClbhtJLtpBNdznTYyioTy6pC-SLdkeycw_Gxxs_vAKkhARCl4exYPuIRIGLayV_XLMrQ3UqMDL4RJrsV-Bcz1spEU8Vy7tZf7TDSzipus3w&amp;role=ROL_DESPACHO&amp;hostname=null-182" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="__EVENTTARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTTARGET</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTARGUMENT" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTARGUMENT</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                <stringProp name="Argument.value">B711893A</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="comboCalleHidden" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">comboCalleHidden</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPanicButton" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPanicButton</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;callbackState&amp;quot;:&amp;quot;4RrjssP+9mbKBAmqPGAxS67ctbcCixW2pKEuAdfYobKjHII3COYF3+kkcztirSuuxd+uibWVA+CUjSrJUdgbbk5IRY74biaMpH1PJ7LFvxZWcsw1ItUMfjq3kBwYAD6dTe9GgMxvK5sefOkA6cSddnqu4Ok9dJdUb+Y69FuxMeO1Dv4//je8PQFptqNu0gObdmQ7jjSqeF7Lu7MpiyFyYJIt8emsuieNGJaITq0vXZWHJW4/TBEwwmHK01Ge+mwB5NIM3wpbNB2WDZa1w59ni/U5OssegdllwJvKRn7yJDdulPIG0kbKANPf9hQmI/CFtTP6fbh7XuxwZ2mwAYSXLh4neVWzyCQMwcF53RSsnS9VNAJz3/BydptGXX4Tx9iTN7nS8yQc6gC93IeDb5pxWMSpHlRb/ZXL2xVdVzjkDXH0VZVdxnfAYwdWupagjnrQt2zYJVVHzqZuM8qxyMYjDOiOGFh/sG4yGeY4xr/db6OJ3tYVNVtEu1cLcXY7yFgQRg7jRUgIxZL53YZLMhfNxyCun0yQDnKy28gftmezbS5fBL1hbKWZljK0jMQ1Z+EJperQ/Ll/IoGZmJslDqZ4Xe0o0mJIXlTYiiRptGm8u8XkiaNpkM9X3L93lUOr1TNQKXhHWjGl8IXmRUh1IAHqoje0YW++7OOuSQQpwxZnX1ZR7P2dAT8/SWeQoghTUIz61+Pe8sH8U7fLOiA2VqXr8e5PDyVGCPIT6IhW2vpyse4=&amp;quot;,&amp;quot;focusedRow&amp;quot;:-1,&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbEstado$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbEstado$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;CIUDAD DE MÉXICO&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbEstado" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbEstado</stringProp>
                <stringProp name="Argument.value">CIUDAD DE MÉXICO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbEstado$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbEstado$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbEstado$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbEstado$L</stringProp>
                <stringProp name="Argument.value">09;12;-99.1394112235047;19.2768896358701</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbEstado_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbEstado_VI</stringProp>
                <stringProp name="Argument.value">09;12;-99.1394112235047;19.2768896358701</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbMunicipio$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbMunicipio$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;AZCAPOTZALCO&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbMunicipio" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbMunicipio</stringProp>
                <stringProp name="Argument.value">AZCAPOTZALCO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbMunicipio$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbMunicipio$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbMunicipio$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbMunicipio$L</stringProp>
                <stringProp name="Argument.value">002;13;-99.1821069718067;19.4853286483785</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbMunicipio_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbMunicipio_VI</stringProp>
                <stringProp name="Argument.value">002;13;-99.1821069718067;19.4853286483785</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbLocalidad$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbLocalidad$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbLocalidad" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbLocalidad</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbLocalidad$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbLocalidad$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;LECC|8;09;002;5;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbLocalidad$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbLocalidad$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbLocalidad_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbLocalidad_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbColonia$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbColonia$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;validationState&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbColonia" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbColonia</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbColonia$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbColonia$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbColonia$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbColonia$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbColonia_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbColonia_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCalleUnica$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbCalleUnica$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;serverMode&amp;quot;:true,&amp;quot;validationState&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCalleUnica" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbCalleUnica</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCalleUnica$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbCalleUnica$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCalleUnica$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbCalleUnica$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCalleUnica_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbCalleUnica_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="TextCalleNumero$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">TextCalleNumero$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="TextCalleNumero" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TextCalleNumero</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInterseccion$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbInterseccion$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;serverMode&amp;quot;:true,&amp;quot;validationState&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInterseccion" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbInterseccion</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInterseccion$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbInterseccion$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInterseccion$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbInterseccion$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInterseccion_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbInterseccion_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCamara$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbCamara$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCamara" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbCamara</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbIncidents$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbIncidents$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbIncidents" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbIncidents</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbPois$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbPois$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbPois" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbPois</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbPoisKM$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbPoisKM$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbPoisKM" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbPoisKM</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCP$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbCP$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbCP" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbCP</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapTextBox1$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapTextBox1$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;validationState&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapTextBox1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">BootstrapTextBox1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapTextBox2$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapTextBox2$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;validationState&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapTextBox2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">BootstrapTextBox2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInstitution" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbInstitution</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInstitution$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbInstitution$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInstitution$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbInstitution$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbInstitution_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbInstitution_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbDistrict" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbDistrict</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbDistrict$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbDistrict$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbDistrict$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbDistrict$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbDistrict_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbDistrict_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbSector" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbSector</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbSector$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbSector$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbSector$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbSector$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbSector_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbSector_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbQuadrant" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbQuadrant</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbQuadrant$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbQuadrant$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbQuadrant$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbQuadrant$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbQuadrant_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbQuadrant_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbPatrolArea" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbPatrolArea</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbPatrolArea$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbPatrolArea$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbPatrolArea$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbPatrolArea$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbPatrolArea_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbPatrolArea_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbmapbase$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbmapbase$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;serverMode&amp;quot;:true,&amp;quot;validationState&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbmapbase" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbmapbase</stringProp>
                <stringProp name="Argument.value">MapStrategic Tile Server</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbmapbase$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbmapbase$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbmapbase$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbmapbase$L</stringProp>
                <stringProp name="Argument.value">41</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbmapbase_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbmapbase_VI</stringProp>
                <stringProp name="Argument.value">41</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="incidentLayerControl" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">incidentLayerControl</stringProp>
                <stringProp name="Argument.value">incident-layer-control</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridBusquedaPuntual" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridBusquedaPuntual</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;CVQV9gCH6ZTC7FMu6Q2i17eBj0EfYjg7tD4sCb4plzlVM5W9qtgJm5310IPJxjamo2+gw1wEFMRhSUNr8Zj4MdaqFXD59up2uPbeCe9cFLuJx5QOz8UZ2wAaVlQKCxS5MmEsjKIWy1ZPZla1ypimtLV46n/FYSjHd7X/x13F/n0pvebjCB5yWzBppnZkKja5eNZhZzQW4e+soIyHAlqJoRBfrJes3g5MpcJYBV/Wzl8WVbeMEWVF9GgcaHm4288EUX6q3V3gMZveF6UKmTqQESSp7SPqOzFz0wXu87FkRtqTjjJKWeVl42kepnMPTLvA04CN2VEbhngOwuFsShsffWENgJBZRcgme0IoWsY9QP+Sy1AXNVZ3FDUfZrHOR/PMOEbRQPetAp+sTh3QwI5PI1tLbw1ApLKi91BzFculeddmSgTkrbOC31EHXSLUAAcc0pvaqJts7VtflhewZ17NO8V/dN+P6HhgFu0DsQ7Y7mDiZnSXAyrpy3YtO9irRcryB4BK4Wh7KCGQFvVObL9uRncOS+17CXAhSaACBhdFNlyWZRli/fHPqsogNNiXTNYcHZkhJ92T2YZyrCrnqfTFfvBtgxIeEf4kC+k4frCJb/A4Y2ye2rHL8DHtvanXvla7ApWKS+uY55JVImcJR3H9+I57T8y5b5kvl6CFAbz8lbIYNlrD1y8dUz/OxNfx7yKjsRkkIi8Ckq18Q1ypY41dWi8omXGTloa1Y19EiAefPy+OXJ0cC6vfSLQtrj2SQmnG4F2DqwQThQLlY5lugLhK0ajm777c3PqiUr368O9tKfEVKpKuNUFgLYrA3WvcR0X2pD9+xnP6lwNDe+B2ttFLPyoZ/xHsaXDWBr11X0AjGCMHOaxPNtzD0FavuzSIEPnr4Pr0B+DhotCd8zGa/cm0oKQNT2tIbhldFIGwI8Vo9V5EztvOdBiNHtJONpuKX0qh0AUNSUT7+3eOtsuQxZdK0KUdg16sOnblWfAsUz4zCMNdIDuDMVTsLTmkPSBPjk/lQz76B4rn2V6NG0XLbM2G4LxCfdSb5MOMWEaUHS+/vrYf1yWHz7wiwZxGPLkB9K0mcxr0sK1gKjttreOmQI+X8s0RqcauGVu6OROkfEHROQNVJjHSnF/Lpe3bM0C1LtbhHewQcauHUR8tUQegFWknvgF1LHwjnFiHRZv48TPVhq/RcbO7W5AGarYgOd9EJ+o0JJx3DHwHSCQlpk4MRYWCgsl8jsqFl6GuyLgBmsSApwva2yneojqZ66+f8/61XzEZOuACZjUruggKRx/86JzCkmLH9waI8ViBKe/0mMAbxP2S7NE1e3esk9wU4gLmfuQfZgn1a+OuNtXyLYGrWMqausRWEF6X0VMHsO2dV56uF0PP8uqOkJ7F7JH7M2ZXBXJUR/ShKpz9atAI/Xxdsoytuz/uMTeTMUcbXfKqaIrOA8RyP63CbltV7BeSBmvIsIdE7Thzc5hEWLplzxRDaREK+1QGw0AlmXQ8Rm6wXrDDCJOLieMaeW6cdCZbLNFBN4EiWdRbQmnDYGnr/BtoLQWzK3CLB2Kaoe3BOVGNK5G3S23eM0+Hm7A2ZWynnOqDCOEdcRjvTEYsYrhA9/J4eq/CuxrZ/26Z7owxNqO4nlu1UeZQ6FfgDuKY89T84au0Nbnc3csni2N+fyn5bstwcA4lK5CAQcRV8YcIIt0FYTXSz7HiJXEYWFHULOanQcSz43baTv4/L6D38z+A7T+LQoNAgRLIQoHcgrqm/KrV5Qg3jfu4+doKHYNVadS2z1pAIFpDeEErpOm/+X95DIvh0WI7M+HFP3OGMXhbr3RqcGqvUFUBFe0Kbnpm+RYjmL4SeElSfbfVG/y4orXiL2gxrAujeHp6UJrbVCidQFIbWFDlnVNBYI6BO83aAIA6tAuBh0FktuGa8Sz3fO0CV7bj/6A3QSVqHBqMTVB9jxcT6i5bAgsYeaMUV2C65+lRK5/YRFIQmSIC1tiSnOouXOAWCV49MOzlYvITCYjaVCS+gYL6N7lePlEAYM5VzXgkA4WYbkP6kY4juRjXH7zF+/OJ+YzZmUL0uitOezM7f0LShAS2qjm/BG0aP8cKaExmvW9ZrK0I&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null,&amp;quot;contextMenu&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridBusquedaPuntual$DXPagerBottom" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridBusquedaPuntual$DXPagerBottom</stringProp>
                <stringProp name="Argument.value">{&amp;quot;pageIndex&amp;quot;:0,&amp;quot;itemsPerPage&amp;quot;:5,&amp;quot;allPagesPageIndex&amp;quot;:0,&amp;quot;itemCount&amp;quot;:12555}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridBusquedaNumerica" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridBusquedaNumerica</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;W7gcC3k5UmSPr0KHI9C0BrrFDPJC2ibfXugQWFgckbxPl4CyKPdqYnZJqKfh6c+y56QxbJj1XcYbksl7dClWbHLVag3tc2qN6WjLAakeenQc3Jb0yqCOgdP3AIabPgVtRmnqqkjbwbR7+68mIzJLmS0r8B7oC+YSyNOp668MQC4sxnuV4lanEle+/yg67JF2PtebaK7WjfpZSETn/rtVlMV2lNhHpLCzPQ/JCs/+VHI0woTFkEZo+mTDlp8vYqg22h5jhvM2eyu78MOYPFZcY5Wdm8ztIzxVP0gIDFdyu5msxRyvztsrohxb4YyZCmjsWEqZcA+O1zXjhAHuQXjTbcXgm4b1QOfUYLCs5sD3iMgUCit7JsQ7QNlJH5ORloDMswo4UysjtWSjm3T+1DRUeRHrQrHo3hgM+FVd50tVXrXdSWgX42VDBoMoJvtdKLiMmnkEYUo2I80qm9UOxDYnu98hY+pP9nP8DGxb+ItVEPziy9p04iumPF17T14jkMdqx9UyX4I2YMAYLDbC4JXkfOVqB9m5aVmCJ77LmbSDIPAx0eiaRZJefencShenfetIf+BNsz5uI2jvYCzBqjFeWynq8W3o5n/S/GASTYogXzJTDU9YbEi9PViGT+vdELnrpDOhu/UBr9CtFSSTX72BRpFDvaLAH6hpSgtaYCBz9sSBiZKJ7R9Dyi/ZC/JPW9my/2ID2+ApGBE7wXhoBRt1XeaEXmxlYU/pQoUpY1Vtjufg4TrTq7aruAdcaI1Kx0nbgK4Gfc5Y4IPdjAMbo2IUDb/DBjgEFHEcoJbRP+AZlHc9CaKWdqWBvWbC1rYd9qoRRu8yEMarv8srKFbyzG/lKrdurstZ0cakxdBaFG0DjyVyoyoVWAKhQAXk5GV4D9jDvkGWrkoHAIUQsaQZ8mwhl6ktqLNZWAlTCDkb3EyavHmqcZcWgxv8zhTyW3Rc9q+y5VqgxP7rI411EyfKeyAOaxCIdotp39MqzjuVBpD+ogPKXAghOIREk3SvRURn05RM6dObi095loehSAdNoWQTc50H6VGV681S2nLFmtf+b69ymBj/iIIttpTRLei+SNuomEfcPckTDCqmAnQH4kTD783/0uxwNXx5VBaJiAn3e14rdGvGlZ9FBGQdZZxLK+1F92gbHe3V3stxxTXLjTRHCO1DZrYlQbrQwhqqooirpsx1q7GHaegvP44kPFlAwQdUmbmuObsfciT0zCi0G246RufLPt1EAswX13JHaMcdM54QWZIMFoJtT/VsLmMLlANI1NKjA/jEEL8vfg+PtH5t1dlDu31Lo4NB8ik+8XIcdt1MHSDGxaLEJ1ahMlZO4OKcbX9LJYLIkgoEloStzN8383aHGHZWHP4lODQLszskAuyPiJuoJsNsatUGqxxAMTXoF9OdlHJIVqJL9aCCk1ZeOw0gfVnulM2zWax8TP6FjyrjlF4RyttCzkOSPzqXKMK7NytyBtFW5QH15qb5yDLJuiMWUveDZaqaVL6fUl+fuSbscwQ8QYiL40cNf+zKix5zoaVcvqk2LWfj8j8Z3WTxyxAHnYYOpUVp7sdDORsZaUvGl60YEUy4bR1kzbwSXlF5vm6jiGgCzc4rqvcA8DfNON+W+k2P6dwl9Ob+0NizL9jy6lXsJsbH+SjVIZPxhfxpoG+zcisvEoO2zHTrbu+rO5DT4MuQLHB5+KxSzgBV9m9GHXQaV/iKj8VlPkaDUQ3GCxwmtSvFnc78wzISaXud9TTemR8A2XWJwTDG41bfvXkP7R8BIBRKTqINx4+Ikc5K3+P9StHm5SWAx/u2hR6Pj+yHO0wfRiSbSZL+dn8kYjjrNLzal9+FlMI1qT83xJsH6nYL17NooiAoKZvnWGSm1V3bH+AheM0jvfH35JLMX38P4cz3yp+XeKVtKvSIqmc1FeHgYpjELRV1I0tnDc41Ng==&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridCameras" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridCameras</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;W4dcdzj4DO211WYJvwi8tlz5krjeBR/rM4McLmsCiT/gciK5UE5YH8nuUfibgjtiJaA6Xr3jlTcekJrQ8HAw6rBw8Ti+1QDlN/n72jykVTFSBiPf4zGVCYTyXr8B/Kn7xZXpibwUJPLQhPh4eovPxmLjzeOVS+9lgodk5MH7iGmZ0Txjt5mGDet34fgMtVqAtwfT3drv9K+MSo+hQvOjdXB1WEa08f/akNX6dznAW4M86NhlFYQISHYy6GI+msK2cMPGsEgf7YhG+EQBClWJo3+oMtOciV6pTvZ6duDfvdhzLPrESDkQ+hlD5ObFfb94XQalpmLXBPG8RrvG14t4lR+ZPPvj3j+IQ2u4HfYOOC5SxKr0bggQpHRPkEsT0yHp4CEp5sxOzpTaKpLZCGRM6uk6VyHPojyYexch2VUvy7orY211qCPnq06ToSe0/dPZ9HUayOr6MxwP8OM0OgQUyd6XmSWh1tP1kQY2U8E0PbcXLn0eNEMXqZCi44x06DU+5Xq1Odcfv/2zCfxUFXd2JIJBWrnmszucGOJ2qSZGrvZBvmrap/NefJXWGB91y3U6Lz6zjKNlqwYKFnsVU7WZ4+07oRPt0vRhDtu+Ngig6Z/xc69cQV15fl1gH+buKqhNd/IBINDA9Ti5WJmK1ide6wSdFU7fSSc4YXy45LWotOXoGXo5jvrXmXXpPILzKqxzX5FQCCQPiwuZYHHE3NewSmy2JrtViIrbePki/OZ7we1JsZhHLc1JpG8N2LSqEgYQ9vlonR/6mWNPuNGfMejUIsAE4tivZMsAL+F3+yt8tD9sIpdMfWrLO+9V9fYTSzZLIA2AGMuUBdyt329IH/zdMt8NUwSlLXmq2SWirspmufmAtoBTu3lXu4p4DYnDmc/oaqCd0tNhDbROi8rGmD+8OSEevxTGZyysXRvpAZ8plJZCfTxh87cOXcX1LYOWM4h/gixylcbwXdIYsCxye4jF8SHNp3D6EBAId2/JpuQZVQ5rMF4m97gvBqss6AAHDJ3DCz//VluhEytXDYVUYvOBug6rrRqNzSS6WsM6sGxXkqdsZDrM/AAf9ORgGXDgE9S1W/lY7A26oNTABMYOKQ0SDQSd4k0Tksn+9IK0ZaJFgj2WblFay2fN8VR+V6YwxQFp&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridIncidents" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridIncidents</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;asWjiU1j8BKjvW7erPugyx1JELsARaEpLsTDLWUnkiYY3IpNge1RGhYEuYcuR274LRdE8HRNVQS+wmT/zU8M7YhIoiHtmCLBtXZYHXJmnuhBqaISFPu+c2Wwutf9vCOiY1ywnUuAUel49G3+biEDKETo8r4kz82Gf0EoPFVFivAkEf47rPt8NqJm0LEz0mvqG40i4ybqtZn9KyMeKCDvf3aqQpsCZwBS452d9ZPnMI2Dm7Tb+MqRYRFjaeeM27jU5eyCz80Svvs6HNxI8yin/RkiALgTQPmj7NR0LxDDGShvDfK4IsCF20gbCLmgyOB91bxCSmb15EOGRLrWHsVHXqy6TxhZGBCG8WX113YTt7APAOo20nZuOLqz5wfS6Qm5rgI9jwrTnjdA8dNKVM1t0nnxyLzXr1G9LT1ZlJosvr346lS0VVampO9yVsM0GbnaJ5U9kgg5JdYQhR0CPKGKFkEfE57buGmrdE9xNUhjETRcN2J4cWn0E8o9j/mTmyFF+pPmyNex67DKRBt01365fRdyG0bgQMSJs52H109kDErAoX5O7WtD2AyJHkOJzaUu+cBU2gm5GFz8RicZVa+xhEFIaSOcL03oUFX22r2FtMU065V7jAWeXpkHA43La8y0pvf9n5Jbc6lyXFqTPpHlOFoMDE2u3dw0+kw79sarfkP6AGxU5dPZOo9191IoYd/GCVGax8TYH2DTLWkxb2dKSD0d07eRqISZX8RdxkqqTkgR8bdQnA6f57PPqft5Em37lyojituIqtpkFmjwKVLMdw49h7LD00xln270nX5oPRuma2tiX/CDI+PErfFI18XiZe+19lHxj9KhIhBn0fqYqupOyt2Vh+3auuAFwqbv7WEYxq+4lqzqbGn9WSONAZuFosj/EcF1hsfTu9ehbd+wazlKMoZd01GWeRZcxsiL6egxuXxS9/zk65JSIK1AmHZI8a7ytToLahBNW1wriJ0AwXKZ/RpaS2CjjBCxWFn00b/FaDjKnO2bMzRQ1X2TqE/Vq+kH8lyq4XqP45/tuZDawCopmqMVacrOeW/eCDQJGTHuBXPK98JGO45lbtY/eFOjFKuP3y/wzQkFv2jTgNid+/Fd6I7hk54qNjxnJKbh+em9roZmPg1THN6Behi3v8Nkw02G+5ihz2nfw46ogAV4hTA2QirBlDrO3IpdhpNrofueRdjg5kBKVZHUuGd4RkG0rZlwsWh2Wk0QoAQgKwLByeuuK0fcX+r4qRfWoeI1SjI=&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridIncidents$DXFREditorcol2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridIncidents$DXFREditorcol2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridIncidents$DXFREditorcol3" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridIncidents$DXFREditorcol3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridIncidents$DXFREditorcol4" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridIncidents$DXFREditorcol4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridIncidents$DXFREditorcol5" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridIncidents$DXFREditorcol5</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridIncidents$DXFREditorcol6" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridIncidents$DXFREditorcol6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPOIS" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPOIS</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;bxEZn/i5p/1NEvkXvsMxfFuEco35R4mgd6dJtZUEUoEUXeLqioL1JhTg9M7V/M7wtXHXjUVi7Qe0RRUiumusFVJOA6ZrqULLK1UJ7y+gDfT07LeMusUsAZxilbzDm2zfEWhNjDOKuPxIRu9ApEB5aHH4+lETuRKAfS9S50uhNG70qXNcN+tYx44TN9K1m3QXgcFSmJiBd00UXkvWBaG5q/hzsgKxLhbqFyJDbmr4APvw3JhH5aM1ppA0srdVWOsnjPNAiYZVIeWYanihQa/QbAfOM1nIT9dNJBQkuGsRVmwSGhAttwcbHaA/bvOTv4cbm7U53PtxbqO7iF0SLRnHF3uhinrkFRXQwBp2Up5R2UIfpdycJn4fmdrv6mqgMJWKu0wCkkYN8LyU3fRHekSd904JzQKK2Lde15eFRLd7vtajS5C2Y7IJjZrb15dFxsutrd/aFKBsPbiaZf839ZYbRKOSoP4g4Ny/cK5FYOMcGjOzOIRvb15l9JEOzJz7ferDarcd+bCNjGVBYqpIk21fMvLt/IBjsK4tqV8Icqus7sQH9uuYx8a4d5gN9G+HU13UCCPiyFOoSvzbyxKUGnEPamF+mI5wtohONuxpTnyHlqE8J/ztQKfgsQ3prYBoZAlvjSukDhMUzqCDU82HNPi0lXAP96nNhPVMebB2laLQ8Fttx+zOwV4Du4TjiATLOc4jYveNjVNBkHcd9QP/ASrYqjitPmu7NDp3bP54zR8AUOw2bUvZd4QDnyfckhQtdMMeyEgMG8ZTrFx9p4tMjY0qQ81eSnniYUwcbczADvaNhQjvTL/D28IzQeMEUdG0Kx2qzOh/LavQKs8MR9Ql61TCgCugsCAvV2I9/k3DwwYpQvcpr0k2uj5ylmtJRGpOdMETePxdu6NGRJgpMHi84xFmmu+OnNp6mfK89DKt33ccEQ9E//uOYJYhMDfUKF80ddlcD1agyxQsGKgEXGwwxWqi7NLOZAFiK1Wh0pWk1PS7GtaMXM2RWnxsJCDrqKDTMacrz5lscx/b/9IoYMXyQhZNT+RjelRrHcO5yT9TWJDZXwVchOxOBOzLcbkz8iEclcopMjVxcz5XJbmqL6AkAH/iA/Kh/q76kqGMMc1dgYR58dn1GNgUQFYa/7JqPqzvhvhTOkpdyWJtWrGKyS01SmYOxMiw90hEEQcwWwQXZOQgAvPIISpttwmlDOYlOMQ5FwSLC62hIAj+XZpwOl/c/rv+rr/cvtHySeWEFowA00ijdo91IM1qsBmiPGneOr3rv67z/lSraQuNdipwhhCpLptO8dzr8hSzUhpBcer5RSCufMnBx2xOeQhXfdjnOhO8JF4bkdEwRQjvTUYk/GNwBvpsWzsP6YrPtq4Zv36tYNg/QOoxiCl/WGcTSROW7gJHsd6DHPjBFKn9JYQX6HEuS+A7bTa7RL3e0Jxh11PIrnGnZ5Z8H0LI7wZYKcIFdosteHRswvo/vczam8fazqSGXd/VSwZv46i/N9EU5TnmtaU2H2kB5DTqmsVuGsTsl0sfBAVA0hLBwWRyiZuT8tivlS5ZEPTr5LRFwOVdd75ArL7NzB11bc7TXWu+WPI+hIvHOI8I/dIm7sm1061VPuz0mZJ170tCVEf/K3EWU0TyabWCvIGEoauUtLPxLrln80Of8TdAhc6E7XyIA3wvI1wEfThGjnTSaAB//0Kb8wwt2ukh06tiNvBIKBwdpz6Ke9e7qr3RJwfLbHxd4hb7zaRBH8fU/veHY3hyYiwQa4l74RqG4anLXlm3vInx/UztS1BtLfpRdpIcFZO8y7OjYsGX0gtggFCLH3DYfg2Co3ueJEH8d0L/6B49+IfrnXMCFbXCpe2ZahoF39f5UrPjfe8bnn/9CLZxa665CBnuVlrv9cPd8G77NEgdmY/CBiLzg6VupfH9bA/1hJLgj77Q2uMj4NrQq4mE157eolM3DOs7uahoddTreNFK70cgSsHuZL9AB42oq3X4RqC0ipaXJk2Hqh7DPkYzmZB7/9gkti4qKoeVA8Xd4LBcW9dGr3lodYxZWOTr&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPOIS$DXFREditorcol1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPOIS$DXFREditorcol1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPOIS$DXFREditorcol1$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPOIS$DXFREditorcol1$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPOIS$DXFREditorcol1$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPOIS$DXFREditorcol1$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPOIS_DXFREditorcol1_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPOIS_DXFREditorcol1_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPOIS$DXFREditorcol2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPOIS$DXFREditorcol2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPOIS$DXFREditorcol3" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPOIS$DXFREditorcol3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridViewPOIS$DXPagerBottom" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridViewPOIS$DXPagerBottom</stringProp>
                <stringProp name="Argument.value">{&amp;quot;pageIndex&amp;quot;:0,&amp;quot;itemsPerPage&amp;quot;:5,&amp;quot;allPagesPageIndex&amp;quot;:0,&amp;quot;itemCount&amp;quot;:509810}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridCP" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridCP</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;G3j9zN3GwQ/oUgDvZ7lGf5nbPuyQLReSoJN0B5IIatOGnRuk+/Pe7N/ml6CbVSGoqwUBPpLLPHyxA+AK4KIbBehJTR7Ikqd73F4VpTJ9KvNxJvPh8+tGJaATcVDiomUtoNAXpXJQ6oRw7PA1zJtaWM/AtwpETysZpCOj3N3XJ+8/zLvRHtBZyBO0MlITXnd/84vtXzWNbKieR5KcXBGvvza/SxgStlhYDENt44DVFJeEmzv+BgjxzbweXJ+2VkH73PwV8EN5v5uoAQhyHi3Ilz6gAmYaONPeVclk+C5CNN3kuB0Ia/xnc34MfdAPGBC8SycI0Xh6PQ36gNcrCq6iJnnVCNZknI9Yn6txAl6vvYeXJxhDLYDzzlGyD9d6JL7d9NlYaUXKtC7aDhGFZTMkTNqsJHkceuyMrKITepgeU9L9T3mbgcA4lSMUgHSctyKfVdNpx7FZjt97U5GzJv8YGWZEou0JBnmUD+X3Hme156XZMZTDYVDXSPXzRfFttQrza3YclXEFXltsvNU5z8Zq/JmAeUy6zoMZU9Z5TAhcsIkvmR+JdXpv8bmp5qEgE9JYxfewBPqWo8dq1IR953WvzkCPjWuHrgn1bmb+Ze1afi3beyW6FVPuPckGHN5atFV3vVVInjeCQDuZjomFzxlbHx25NSnDW30w3/WnR6FbLXALrEmJsKKNYEND7HLiMhy+fuZSV3ZipvAg0go8+G06kJT8fd+Ls0av8y6tVEAMvgAAo1Q0ykBgT47dcge5+FDq4wiBHqbrfeCBkGPlh322eJlAiWSzjteyhJGG1hzPzk9O0uB18I++tLX+LFi5CdzN4JIwxLTbLlUmkh7hZko/cj/oyvwFtVGi+gvOIhyGKxgQ/fntLJ+zHhgxJt17d3+/1t3hFxEg/SS4oFa3sSeuuekGVe7fH+Wxu5kyZf80DWuAtru/8WenO424LSYoHFBJs3okzW1O3a6Q0rPjz1RqHo7d63Ag8r5lLONU65qgmuZE89pi2WBQQCL2UD+ARyqAOTds0g9oAyiAnLOTVxqBBzJCihP4cNI0PTnhidAYQpXee4LsgA7CpD482fxW0xbJX7DISX0TIjW6ip0NSe2H0ub5diFIAqL6o95TYf+kEmT9U3Gs6h3SVkVlNW7KACTUdHbxCzi/HsGVBxfGA6AcL4yx2TKFqEaxMjPYRKl73XgNLDVKfjy2CQeXEII9+cKewQgoL+8A2kbmPvNoX/3lbw==&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridCP$DXFREditorcol1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridCP$DXFREditorcol1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridCP$DXFREditorcol2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridCP$DXFREditorcol2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridKM" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridKM</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;If0+Sa8hsWlPg7sjcqMfZ7KvVSUkPIrQrVPcHxOxUVo2Hax/OAPp6P3eUaJRwjQne18vtp0n/tlrnp9oBJaYg4csgxV/1USO0NrdinyG9uHBwmxAc5qds/2zRKU2PmHJ9ClzKMT+4pRQYQxky/Sf8l5NHhWkjPv0lNIbR8ms06YmfB68j2GfxAVsDvVasPfkk8x+lzkMe2iNkm8MbQOgujFuv/7/lXmgxCCz+mKQcN1UQURexI4woWCIk6chIOw3d0UarIxvMYG1m3oHW220cL5ljDUbVoNQ3LHFdXgFrGVAokuXQBoQpDl+2nB5VItOiBjjkAUsBUlOgesqd5WXgo6aCHRyHFJuBtOyFUcQVQ8oQLWXlWmHsAjqtlTdGqW7RYd2JeRtHFx6P/dVh9B5vOZ1GJgQWR+u9BkuK70SZ6hk/N/LeMkWKaLQCEf00XsLxYxldA0NS5GMxY/pusxuanU7CMTl092EwMT0w4IK2zivyYvXUq4hw36AG6upcGBuB9ABbdoPxwrepPBhPvFXgILBYq5HWVrr/GeQG84mEKSnfFhfHcbUCWOftRe6EA1UbFyxtzTp8MwRqbeLunY8irnlHF9vyQU7ytk2CZLsBrsBUrpdjclPcSYAINYoGDZofudJE+62k0rx+EnSfEUzE+81Bluh8yUd0B6lE7jCqZr227czyVOkKssejNZN0t9gfc44Ytd2h50VXOSMUn/283OcyOT3eFjyRoPCtiuICO5s8jsyWgnPuLcRYCHI+HVpkpczKi1C+YNEF0435NeHqY6ciM7KUGmLdQqt604fMbmUKijL5WKAATWTcQpiG9b1b90W5YhvUZcAIa3AzhTl+9ReBE7D3WSFIETLvsjSRVdGyyM5D5oFCBKCP604JyoEyORdY01eyBENbSpNq/dU/R1Z8FGmdmpM5+va0mu4C0MEFZ7RVhxx2iaIErxnOuj4uudSZeg5foIHL3PYcriluSd/MRqygkeow7nRs6XPta8Y82cB4g93EaCQGcFDA8M6nxfCm+EjxDiKSQ1m5GMaE1a/v4ebRRPYPoDYsH943xA0kKNg3OKBwf92CnMFYh/43VdNzlNBe3vUvXed+EhcvdDdXhqBWptUXTfR5jPrjQajwdufS02awP5xsrsj+Hgpv+5bP0XjeUZFLwxHTpTevw==&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="BootstrapGridKM$DXFREditorcol1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">BootstrapGridKM$DXFREditorcol1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbGoogle$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbGoogle$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;serverMode&amp;quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbGoogle" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbGoogle</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbGoogle$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbGoogle$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbGoogle$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cmbGoogle$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cmbGoogle_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">cmbGoogle_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="hiddenCamerasID" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">hiddenCamerasID</stringProp>
                <stringProp name="Argument.value">{&amp;quot;data&amp;quot;:&amp;quot;12|#|#&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects</stringProp>
                <stringProp name="Argument.value">{&amp;quot;activeTabIndex&amp;quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$BootstrapGridCameraObjects" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$BootstrapGridCameraObjects</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;cdig9ieaCSjA3NQvQsZFEeBxTfuRJMut5/qPSdW/LNxc7iqsA+BuQDVA1Byi0+dUllSIqOP2c9I2K7JRpyk0LSwTlQSsF93FD5/fWO6QaZoJyxvx3cISdp14MVgSOY0E7YaDlTBwvpPbVU+QygiuXWbqJAjR5J2ElRikrJ4w7RxU6qph0YYCeRwAxSxefd6DbcdmjqZKxgXfS32k+JjLhhnEzgc50Ryi9Xl72YoXwYf+HpIcSL2Zc9wVkDOCMhIP3Cv4Qz+Akg80yhPoh6KWas9c/ya+HaPmWEy3s1Pz7wPPuWmmTIV0ofjAUADkt7zRxbElXvquJsDeyih26qg5RDnSAAVQ0X79qIR5B4pexgJhdwD7clQqo5BtEbRineVmH5jQnvA0pq9whO9vg+kMq6Kwjdj4VblFv/7swonLoduSG4Mj/tHoeRMY7nB9MhUbycNfOuPV8uti5tWoojcmSTXC4Yi1JpR0zIQOo5HkpnyhMqz+nwBCfuKWQJ8UyIgib1oLcFgQrfsj2Q1s+qLGP1fCqlEh/ae6P0Ekp6HIux6G9tu+/0GGo7smLEu0KIUYXTdx6wEdyipAVAPR0j0Cnly2tfNSzrkDCCWhh2kE2uLJ/vPiEJYDR0NAn2XZkEhq04108OXHef1ChEDKeGshwgj8l9eACCtB1QlNmGLk5oYDpxV9mt2xWVE6N+C3SDQRXRpOF80ZyZblA0Pj5oDEAOWbPcjh7CRZas+I1XaVHtFuc3/qeGRNvutLS7c+trVnuVg2yULEuGv9VGXT2pS3il0Y1cThM3Ozts35QUabyS3aZDbKoUiPCHzv8FuTuuZNooMWiKEB4Vb8Zf14ErmdaBZg828evh8vLDppEEXYYGA47kgM9IQAH+8vSbZZq0Obyc2PUpzE/yys31JIUuCXmemTom0xF3vJZPKT76HjyXhum5d+8u7fOeX50th+n54EatSVlYO/nwecow0xzF+mqM6jEwogYOyThoRlAR1VbxMOIn4UwETrmNU2jFFm3eVWl7FFYFN2CVIuQIrZne4+j588ElPmRsAxr+TgA3pgcYlHJWlGpvujZnABCDtYpvPiiDdQ2a6zebK+lznWAHid/bcsf/5brAd5kLkwyfLFoR7GBBJZxIXokow53H7/h3w2/nHr21rPzKyVRkjzKtOK/60ABsCVZBKOdsbZmW5HXbozehLOjSY5e/3EVoGXGQP71zIedmbV6uDWmagzBlaP8Q==&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$BootstrapGridViewSpeaker" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$BootstrapGridViewSpeaker</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;rxC0ZU2LXsqOVwmrNBiw5SgHT0lXlIOw/z+qZblqhzksh86MakTls0GZxnzqRNJZriwwNNdr6GnsgVyqHhJhJRQzilF8bx2jipmDDJFKJmoMk/B+3AJzBaIbVJTrPzY01NhRcaXR+qyS1sWwV9hfYnpkgrmWfZtbJKiWRwIYVpCyVM5iUnd72Og6ZD9avma5hPtrlNJ6lOrEJWmZZcVkRtEz18z5sLb8pOui12GKxqlvMS+hZOhZ94u/GLQiuRsm2CrOEKupizhXQrPxdj5RQryEmKH4rgc/7vgqO6xr64q0RW6UudifVdMMLCefGHVz+GwjL5IFcqi0ZB1Sl7W16UZ4aX4YUG9ez52gTkiJ8e114+V0Or/l7ximjMdBYjH/Y3lEH6xyYtyAdUXXd1GRmMP/+CtjV26Y/NVUr9VF3tlMQfCvpCnAsLxNVy+Tw+CAmKeGHXnKwO1qyUqiGlok8u52Re7Yo2WtQZzqKdF/8Za6AgpnCvdI7YgNAPCkqI2o98q8rNKIhECWsj+qewi8aIdsmIEc5/MF4a8kzYLmo6CA+jGt/frnqXATwz9t7J05n8Pc/pzYAvqh1+o5yhmJK+dkPeUT9jS/ysJvTkhJGtBksNRhiE3p2dN0HplXgqcEO0RZ8F05xrDR5yGCKHtdzQ9Xp8NcqokP3DLycKfQSahWpVe2PyYzni2Byz6FzoL0NcmkyD9cTeg/svTKuj3Pwyx7TNPumXvNlin0rMVx0+Ztp4iNsm5wvoHhiwu8nCN+58r7YLe74qzx2ZeMXZ4sVWBnKcAjoeUj2XlY9mW1cEBm7tQnxXdCoKXwU8KcbtZ+Mw0HgWJucBaQm7Rz22X32YzfIHtEyiJKaktjo0MAhwswzhY2JlsL4ijHxdaKSmxBR+CpjtXAAdUP2xXTqzM/Z9Fz20gFD+Z07QrAsHt6YL5fPS0+pag8DybL8Y3Fcr9jQOYwA4isyjhWruaXevjSlhpA6pcPix8gCjxB0OGi2Iit3v5Ovnk/BVsbPaR+P10aPk3mN8iKMGPbMvpEsimKLxbzcp/H623XXetpkYkeC5wJfIJXQNnsUkiWMWIzWc6ypsknKDjJYtBFYnKwsKiBO09AEPzIWiVqMRosxaUJjBI=&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$gridbusquedaIncidentesObjetos" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$gridbusquedaIncidentesObjetos</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;xHhSwh9zSD8qWs9fLgows2m6JbYv030yb1ZIP7cT8MynBd9+Zn1Y5/y1aWl9AKhpXdYJ9H+Bnb6yyTo56ea6VNsEj7IcVneTvHfZVRoOPqfdH8ZZWLvTfXM4n/4XJPuDz6Lebjq1Vzj9LSRpol1iuiczSELycc7q8rgnV+pUyS/QDX4LedJBziPwM/4mvOoTBNjCNnhqfdAEpAI3hiX06yQgdbyCYPh3haa1PG9rSe6RNq277MCgexVqGogpFaP8Sr5ZFcWLCn+5Vtd73n4Bfw19cvsjbpoMXuuEygxvFd/1HIoWPkTarOi8FbtaU0OFLMXyuJJCtTKo25AYsxf+2Js6EaM7/B2CYTcbbJTDUj6/kAUeATlLHiyzAuY+/rcF99rxz97MlQovGgUE8sSNddkjDVtNPb7STWWcl8nNzTVrQOL3Q/Vkhs6LyAK4HVaDSI/JyOO/tIO8xKqDKniVoSsH8xP5oiobklEbjUkyCtq3C+Tk2+pEGWkTAvdlf5I3VyFTFun1ahl3ZeifG0Qf+JB+lU3pwagN3VJT/wwtaRqEiWucdzQZCzl3NVW4wmXjX84G7mtKMDQUjzCHNnKXHdvhTfzVtH0/6bdlovk6sQGwtFP//Ysk6qy5WpFjlPscuCCf8j+2iW6kPP1Yf9n3IpO5NPqP0S3aPXl1dYYd8C0Po2m+FYa9wvfVgFt5NlyKG14dKGBmLuAL12lnOAzDzq2pVNA4xcdANtrRuBqsKzZhekf2NSqjPeEuhgmHQLXClP8KcwM38SNpKFDy063xYcclKl6PjAwuMEVYPaHWjwPnMyXNPFx6b07nNtSTM56fse8ws9YHZ+cqMr0+/fLBhelMWIWYl9d4e4tiQ7SyzJRCHzD1sQikNptPh3SBoxUsu468o0tfBLol525SGHYn1CTc833FUwpEujbNTfo4Ur/IafRAgShkWjHmpDz4SI3Srnc0lx9cX8gJwbr8vFh8liEZlMWkx18aZ7fiC4TNlzOrWOv7O3Rh2L0RXzCeCzxj5COMyA4FZykE+6vvYsBtVH+HKQ2UpHJIE9XF3oMMAwhDN6e6S9GpQRy+rV+5i+0hL6/beevsiSeO2cJf4deAIoSsD0gYbP5+VADfMPZsKm7/XNEv7bqW82REKj0sneFNRcWLacVh/OEUQi/X5lzysIcSiBg5t/1IdHZ2LkekvBG3C10Cv+ygx+/jdMkzJtEFkHg6lbxhndKiM4XHdM14GQ==&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$gridbusquedaPOISObjetos" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$gridbusquedaPOISObjetos</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;0gq3hdWxnzsr37so1oatm1QJdTdvkqP9IUV86LoR20oE5JW4isRqsSbjJg3IUu2dDTE8seNynveWDYTZFDoQ9oMTFiXMvYIr8zFUzku/38UTM4CNnEOWPGBPluPooMl5CDRCuqY5vW4wWs1IOd8r/qLdFrR2OdeOvSAlKRZBvZHBkbDqDq9Ma2PKxmaeMN2SVhBVtiCKh/9PefThxwdpo4xi/q9GrCB5YT3H6WgW/4Xkelu1dfNgbK6yHFUizQ9mgjgEXH65XWR4zuCDIkU3NKIWj8R8WLZ5AWB2osPmRa3Dt4ndfEYTZgqg0fADtWhCIsbuIp7JMlWzGopP34i895OgEjZkbQ+YiAi4gcChA5JUB1Wqx17ckm8aH0R3C25exerhAqw6nRD1kNUOD6Q2sSElvESL+8rbnayV7h4Un3Tqy4PYYk5MmG+tdXBLnBWR5Nx6OGeBGsXFVK/dIwrYa1cbCcWP4sCwc0wGpGch8lPkpn0TkzisyIT8moiEG1TB+9dhKBXAGHdga85aTwmLCgN4yTUZ5p7grRf1/nlhfr4b/hhyuFbQvlBKgCLtylER7pZeA7zsOQEY7EhEa6tCZ3oDjV1sp1dlB0uuKUFRcGM4GA/wD8drx276z+EXIheQIhhpqipOCJnkda7GMd37mDVLFOgMgkbpGWtKauZG6bPJrmCRP6y6su7peUOXMQhxb6rJzU+s5uWQr2KrAc5tDuFrLWXzo/IN+KlMmcXX1M86TL08+YG11X3OsuJSXA/yveTvby0yWsma+E1OEe9uhJDrx5zro4dDo9N4//5uzfLsOMcY5+i21p/90rPwQ8oDc0mz6qJgLFvcVGgXuC9XcmDKWWeK9KBHuN3k8xUntB3eRH4zHjJR7cbNGkE7QLgP4aekL4bNmeKpSO/U9jKIwqd1PzToTY5Et7b53hL+M1ggmuTUX4HIziAv33LvvbA/i+XdPAuyqXEIKpdVNyzUuGPPqtfD7+C3k7PoEOEppMmOiawZJyySo883vRbXLuA4nxq8uUwePYOR4ZMEb7fIDY6DVMWvzneZz+0kaMDJGqvBM16Zpr0E/HKF/VnXU1Q6o4VKFZYIZOWGbV1ZX6kO8gouGgHVkuU1ZOZboVxh2a4K8VKqP5LwTvHbabgOaNE7allupWGp159DUnKkgzb871zakROyBNioCwzJEn3he6UQMB4zoP3Ph4UYO9PJ4PtYfOYSFXSHR/EqiRmn/BUXdcnCWcsEEShfB9BtHPQ8sRfI7otG/jKK18O4exlRYO38w0y4NunAottO6qNIIMAxOC2e9nNJj7DtvEuLWDqNrxqD9xpikhyGxKDEFx9wIrigU4tf61abPE2XKrji+sZkBXq5Mi7AswQa9N07OXCTXb4k3pUrIXmUqEj5lBlBhMI+mgQwXBp7nMrI0MIlVxwi7fP2C0/0WupuqnztDokd+zyJ0vtoBlHUZ+5E7DadwRJzOGWPy5uR22sPprTZUSYYp+hwEayQo8/VOMJqQ6lOYDIRXXDqwmc6O7JqBg67RE5EzO+dGuwz9RsgHUPpaJlbNkQUP4OUg7S2vzv/DeDbgWHvPEeHBfOKDKcCSWQrJyO7OLpZ/su1lryEkK2aDNYNgDnBOsG6YYkrrq7WO871bf80wJOpg4selHdRGz+8U9sUdtHQuRfpJtq7GsUhVS5AeGDMWuO0EMW6AI2EQPyjWO8LyUw41M9cqK3M94HrzrVN&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol1$L$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol1$L$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;CustomCallback&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol1$L" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol1$L</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects_gridbusquedaPOISObjetos_DXFREditorcol1_VI" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects_gridbusquedaPOISObjetos_DXFREditorcol1_VI</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol3" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$gridbusquedaPOISObjetos$DXFREditorcol3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$gridbusquedaPOISObjetos$DXPagerBottom" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$gridbusquedaPOISObjetos$DXPagerBottom</stringProp>
                <stringProp name="Argument.value">{&amp;quot;pageIndex&amp;quot;:0,&amp;quot;itemsPerPage&amp;quot;:5,&amp;quot;allPagesPageIndex&amp;quot;:0,&amp;quot;itemCount&amp;quot;:509810}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$BootstrapGridObjetosGps" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$BootstrapGridObjetosGps</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;XEh0CzSuNTmUzh2QYW5b455ehnHdS4ydV4nJRNJ5CPEDQXCaKb/P1U1y90ojQKnTALiSV9Jf8YsSQBnI0C+sFcbJI8dnSb17II5MLRw3qO+vPlC9Snwj0kZgIl//2/7bfNN0L9ctHEM/dMGbhk4SEdoHjAG0gLjGtbHPvQz6j/96qKVaYm0cNvXZ5zR/yaBb/16xFqpNLwjmNm+R9KrWLU8LQL2y2/6e+tbUWmj15G+mMtTSQiIehm6zc8zec/M9+9JR7jOYTQzGAY3Xuyhv7kFXbeONWn0nRlnDcMoKGsQBN+8u1bPp8AQAzV6EdS0LRaQ9GaTbgI+xDX0k7zUdofVNY21FbSYFb1/ooI0PozYV2DY84kg0lk6Yvsngf4r4tWjdEwyEEL7uiXmy3nr4SH/Gh9CIF7Z/fUjVWx9gW0nZz64X5mX9OC5t5wDQccA/oN9Da6FaP9T1PnC652lB5/S26Byl8gf4AmAU7fUSNzPQPSaBGfDZyFh5qA4B1/UVhTIAaN77ABVbS7xicOxWfTC6z2hpHJ7tMwoWcscfJ7y+jWUMlLPkjoMb3gKTFVYfCLSvkRO1MA9Ak2MGVeZrlrtv2d9NT5KS+f5gaRjo5+eMR0o17NAZc6AtsCGWdTaLDqcvOxyo/6dIEAr2J4fIRjbNbjTRUi/YVt6sF7UZ3pVwuun8aYUNk2FaAFoRkBLT5zmaz65nM99NLL49Ou2QRA39IqzmlTTd+Ul6BdPhfja2liAnMeGtb4mftv6QPCrD&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$BootstrapGridViewVehiclestemporals" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$BootstrapGridViewVehiclestemporals</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;+fWx6LJp+O6dh0aZ7vX33nhY2P/dXUiGlqyd1PRoonDetzDpvw50eG3fifHDgGPRAOQELUiBiy+MqluLGdn/ONN2m5I5G3lnWasz29HGKccHqQLHhwYLJjgfix/BimZfhL4M5a3luFUrL1h2WdOu1B4IMLUCTGL5EWOuGyww3CbligAWnEgH8b4+Y6mtJdQhwqyXjEBUxrfGv9fk6OO93PXZny4n0G6mu75dnYgTf1IobmuMhj+Sl2jtpVEoVamtpEEDsAKHThz1AGxzIzLVPR0AwcVWIr+qkTGJSTb4u/cyc0CCl5P+5jU1K1KBEJNyYPKFcyj15TOwdNwA3Wtvk2pFBVDweQPt0jL8eg6qxbVh9HdX+MJ1f3TJLbSj6BNgGe39sDK/1dq6WNimn57k4E/awmK1paHOqAFG4DJnzQtD7Y+d9gUJpFyfqIHQ387T5uRn8SVlOrUDzSrcyWJ1ubuR6zZ561P2tbzzkaNbaalPzuNWsTrVbxYxhnW3uenHm/5tUmv+ZcI/yx/PxgXPXrgcNnTYbvKzYG5Gc+qWdBwT+iXUaVAPjLP/WAMcroeNVbfL7PZs+hyHWtCi1BctRKqvS9O6zHp5/zVSXv5MNIMJMTZVGntCFEYUQBESdJMwBlP1bnz1fGyTib7XIYeh9wDg+Ps/KxLBzVVUwIQCp4jcmq0OEOPj7f5N0vYWLCqTN+FuldUXmZO5wNX93Wgx2NknKHMqyrQo+pb2GowmmyCKym691+oOuHI9/5vJa3vc&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="ASPxPageControlObjects$BootstrapGridBotonDePanico" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ASPxPageControlObjects$BootstrapGridBotonDePanico</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;38Gere3ff1AXm63K8lZ7+5w7OXSfFFxFdgv3gpvK3UfDyjV5iowW11O2IWpr5Y82PhXPHIYep/JIZ78I5w7N8M0QLz14DRfKI1COpSYjPTx76MjEsxA8nt3YV97nhAFGEZmzBKDx+/OZE+PSF5NH5pOkK9ryhz8/B414RYxXJCxcxE18CQR2UWsNmecQYQe7j8LbdDUJN0fbjt2/cHLBIUmUysSrkZ0JJ6dJ+fpBTh/3tWGehzZRJ9AAKXjXY8q81PvCBHEv6XPYn/URyHOhX9j/ImiFllbGmQuLDzykI1Y+cnrzHa/UgwFHLzSFjifTqZBcWxW3YjMC6vprXU8yDgrbWZ8Whcm7KOmsTAqdGAH0+jyqkETkpyuP9ccYSUmjK5Cn4QgnHD2l1igKi7OMShqFTbZVlUbY038VTEQ9AiQ/sptV5Uc2yHSWxFrWh3u3I/Vkx6bfx13W9bESgwfh9c0m4plttHKGXca2PTgTX67EKhD8r1yBsEEhPQ2MTDjG/t1P2XP31K8dqx5mvBbl4pAReA5nyMoCcy6YbwQQumn2nZte3FhQOF4+alsEvXeR7bf4xZ0OmJLEy7MKRTPaCvTKWVS08YqU8h7PhSY6DI+AmmxN224RppbsxlkLhDTb4WFD9pVPA3tKm9fNC/8s72tGmclbE6xMAe7P4LIeFzISBJ5Jbjs5sX1/whbKUlhTd0HqjxKkzlbB21AgmRT2G+Mg8Bw16cHyDw/d7cvANc8yTC5mIAeyIBbIG3v+DMu1BBCTUObxPyE5z0fEltMyXjFe/fn1oGY0WWfP/ACIKpXljmlEgxidH+Ya2aotq5zc1rvMC4uXre1lHbnfXFR0kMz/Dzn3EXvVxJlWARGevLPBJqmP1UDkDJ1yxrfk9gUTVWXb3NdLHNsJR2JhPji9b/xOv6V/fmoU8pwAmGKPlkVgvLTOkSsAEqgskSlTt+VMvrh5yk/YLyEnyMgnbot3ngScEoHFII1Qp1YuBeR1qk36EeAU8+zlVpqQbvmHv952jgmBvWiqdnJt9HWerxEnqZ7Uhq6oo2+ssEZiILiUOMERKljPCB6Ps8O7sfFy8GCWgYskWs9DZX7PZI17amS5Qg==&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupSpeakersMessages$GridListSpeakers" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupSpeakersMessages$GridListSpeakers</stringProp>
                <stringProp name="Argument.value">{&amp;quot;focusedRow&amp;quot;:-1,&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;vq2ZeuzvIrtx1tPGv9jDnL7JcAzm5VIDFgKnJCaJPyZus9AEx8HFWezUmYi9jSp9ZrrJHUJfjK46jNujr+Za/SAQkIHTwf80wU1ITm4h7ZiEj9HXwhnbErTvrKMKOvjaxzVsZ0kjzcnTDEjVlQU/e3525INdrER/7CueNlSDXRhlOP4yC0BGI7+cf9+57xtwC9EeJCb8Xj+aLVYYJkDxlq+DZeC6VSRP7UqLXQtVriAJ57MiCs81osJ1c1dFfFFlw+KjRYAIjfOtaG8Quq+Lc4vDFHdWM3YbUdBsHPg18n2MTNvh2kXbAk5diK/ePD3KmNkz0aEAt+5BSjwPMu+cfbVwRiskP3o2uBrEGu5n/vJU7AvHzBSm1/iYv/WgIVJ+vYCRVqWrwwJQQy9izqwJwoKjNN4CEEIIksOqMytc3o6Upb+NPkDLUhpWxC0JLIeWJYTUGdudmrH72A+1d/zP+7S8mmF2CbdoC2YQ4LxZMKZaIMY5s7l8h1ZNAXaJ8Aa4mRM5NF+8vNGlo3IIg67q6Jb9ORAVnGEc06aspImSneXGcm3+LOLm1yIkBBDtq06uRRWIMCuJBb2ie8jcVTdCIWfmP7GnV+3MXVSrwiU2Yz3dXcbssVgrNwUf1+Oefu/p0aUqgYFSnJUEy+fdAKYOGs2czrlZx/Rn9h0uBmGHklq8PO6TsWGBSA+BpIOiIM3aGBog3rBY27uHaB/ANvnx+sWMatycR/Im9mwdZyiAwuIyUCcbNtgpcX3JiscCNhT5uDjVrJpMnTMR6yxO+Uc2DIBhRzeT8Elub+ru5aBdYUcMkRR2OoCev0tJQUkhHSLjkIj96lQEjUhaIniDxjnP+YCiQFS91NJ0nnzjQ9d762N6JWf984qrJoyHEJFSU2i4QxzLG0HkmYC7j/KpZkdpuQ==&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;lastMultiSelectIndex&amp;quot;:-1,&amp;quot;scrollState&amp;quot;:null,&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupSpeakersMessages$GridListSpeakers$DXFREditorcol2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupSpeakersMessages$GridListSpeakers$DXFREditorcol2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupSpeakersMessages$GridAudioRecords" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupSpeakersMessages$GridAudioRecords</stringProp>
                <stringProp name="Argument.value">{&amp;quot;keys&amp;quot;:[],&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;callbackState&amp;quot;:&amp;quot;nyZKrd7RtWlFF83rCCtZUmnfBSvmrO2nkor2DYWdXNYjbe1tCjLI6degs+/lWKWJM8hb3p8sXCTZj+BNimYdo3WKMxM7UNdPrTIlCRWUsZMw3bdgnrw8+F4tDXcA9CT3y20kWVDBttR0XEJAs526EmnyDU6EruMsFr85dv5X2cpuK67phe/qbfwAWsaaJuOZNixziNusfP709YonYILPIj8FdwxwW4HazSiGkfxf1VpG9X0qler/aLX4MfQmQHmaAmvM4eqKkWeyoZHaTY59aec8SN4sXtvSUnP2p6C6XS5sgmZgcvCb+VYj3INdHwUa6pswJgzMvd6BPa1w5rIWC+LgMS39uAVN2PnITxs7WCrePX+kBH2XunVuIyhZ3jIrZmKlyvD4vXilDLkCwp3dzBIwexB4QkyCx0si4vH9dZkVch/zUdShoasdC7bzGZ55LwPc2gAHNUnmR5IUnXsz6o4O2ztXM4EvpMH02B+9g0yj1RhuzQ0ua8eFwLNrA8ny+DFBcvvOXjvLQWIbYEPiWXEmDZOxJw1A6pLcoAQzR22uKtITNDqKWeogbfIrWO3XTZUW9W9ePNh80TdU93qX9ZnWvGAHfXt/QTmrBJVb99uCLprXEiK//etMSqXOLAe1Des+mEzfaFmOstyxA8zedS4Ww/Fv+CrTqZpaInczUo8dHKLJPJnmufF6Qv3uMDDywXET3E4fmHoVu3sZVsH5GthiRmruAwD2Az97F/pAvM8=&amp;quot;,&amp;quot;scrollState&amp;quot;:null,&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupSpeakersMessages$GridAudioRecords$DXFREditorcol0" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupSpeakersMessages$GridAudioRecords$DXFREditorcol0</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupRecordMessages$spinprioridadrecord" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupRecordMessages$spinprioridadrecord</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupRecordMessages$spinvolumenrecord" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupRecordMessages$spinvolumenrecord</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupRecordMessages$textrecordescription$State" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupRecordMessages$textrecordescription$State</stringProp>
                <stringProp name="Argument.value">{&amp;quot;rawValue&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;validationState&amp;quot;:&amp;quot;&amp;quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupRecordMessages$textrecordescription" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupRecordMessages$textrecordescription</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupSpeakersManager$GridListGroups" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupSpeakersManager$GridListGroups</stringProp>
                <stringProp name="Argument.value">{&amp;quot;focusedRow&amp;quot;:-1,&amp;quot;keys&amp;quot;:[],&amp;quot;callbackState&amp;quot;:&amp;quot;4BM01cHYOSLE9G2q8Zm2GtWjUeErqGpXe4YKVfvpYr1+YtHgsQnxhW+aoEpX7qsPdVJ3b5cqV22k6k30/pRJF5fS+kaiNQSeAWJfvQUGtp0miDY4OGQrxHiBsqVhj9X21J1R/JKJ0yphR3F/3S+/2WYOlblTh4gwisb8GfYSJoCstbe6R4lISKeKGHqNaO7CAVm4aL9/rikGCYPweCWAc2I+3joCFsi/qelOUMvzQNRZ7mSGehvTrchUfIgJyrnDzJujxzLYfgJ79WpDztedSiWxKuB/Akd68zF77h0HB/Q56yIEj31Lp/WHbH8wAwW8KmpgzOvDCPuwMYSyRNp573CHg/gi0Cw2S0u2KSuZ9SsDbGHn7tFelmn+VHpARNzSj3ZD7ftU5lDQ1c7ezdSQGKmaWIoAGrqmpaAp1kAE09iwlpAD9dvnoM2iAfzNfGbkdMPZVKRAxHaBEO3Ao9sPNk38UUPegpNx7GaCF68v5Crc6TVE3L+sZgyZzHGorKKeHRNUCbq4HJ2oqv/RvlsPQpDvUcKB0zV48qt/QM8KaQOWn72bdJ3+ai3Fs1kgfDMI+SFjO70xE+iTSU/4z6esVKDaj2q3jPC5L/xG1Yd0VC1rVXNWIv50CKGwJK5KMg+NPPp/01hbkOPNkA5at1GOVhWbQUfFotKF9GNjyMWKz7VuKEADqY79+Y+uVCKiqs9S&amp;quot;,&amp;quot;groupLevelState&amp;quot;:{},&amp;quot;lastMultiSelectIndex&amp;quot;:-1,&amp;quot;scrollState&amp;quot;:null,&amp;quot;selection&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;toolbar&amp;quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="FormPopupSpeakersManager$GridListGroups$DXFREditorcol1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">FormPopupSpeakersManager$GridListGroups$DXFREditorcol1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="DXScript" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">DXScript</stringProp>
                <stringProp name="Argument.value">1_11,1_252,1_64,1_12,1_13,1_14,1_19,1_213,1_224,1_225,1_211,1_227,1_236,1_238,1_239,1_230,1_234,1_240,23_0,23_1,23_11,23_12,23_18,1_183,1_184,23_30,1_21,1_22,1_190,1_15,1_17,1_186,1_193,23_35,1_23,23_37,1_8,1_39,23_7,1_189,1_32,1_24,1_43,1_60,23_32,1_212,1_214,1_222,1_226,1_231,23_17,1_195,23_43,1_182,23_31</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="DXCss" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">DXCss</stringProp>
                <stringProp name="Argument.value">23_79,23_85,1_68,1_69,1_70,1_209,1_206,1_74,1_75,1_73,js/olayers/openlayers_6.css,js/olayers/ol-ext.css,css/siga_styles.css,fonts/mainfont.css,/assets/css/default/app.min.css</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__CALLBACKID" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__CALLBACKID</stringProp>
                <stringProp name="Argument.value">BootstrapGridBusquedaPuntual</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__CALLBACKPARAM" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__CALLBACKPARAM</stringProp>
                <stringProp name="Argument.value">c0:KV|2;[];GB|30;14|CUSTOMCALLBACK10|09;002;;;;;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                <stringProp name="Argument.value">xMAnPDUu0UxAKpaCNn6mcevUv1AQUSjbPaxSLZrG95WVDOUA2qGWq8JqTfFmsTGg2BAK7zHU2bgx5LITnm4eN6eIL+5HK2/9cnDTfvyu4Z2pM3P7MbN+yXOuZoeViQIB/TLtz9MxU5p7ig5YeN13dTkCChAm/zrtlht539Q2qj9ZP9ecmKIynXc9MFq5xppBpgmnaPKEi5HOzCbKkYh3fBTyTH99CSBXjiuM00hwUsIa9r5Dl+BiX69QkoM9APKD31cmd3Jl6EhlrRU+KLBAYDVKTtOMMq3ZS9332lQXUQiqqxwtJrmbs0tviMdPFj6KL+sJmtW7L4OD+qDGxcByrqAnsJTYQCP72BW7scgH2Vb9VLL5YhB2c63W13aeq4ycsb7O40C65wZfbs5lltLAcsEP5maNT6WZtel2Z6i3sdXtVfw3NXyUqAEis5Fp7CTNgzLfq3qhCUcNieOdiwFHlj7SOWX4lbmPfZLbKTIQkj5LpvLetz4CwnTlaG+f8nDFaxOzHbIw8dnSXKftx/+nZEBA7F6NQY3keQz+RQJSLYJ/2lpXqc/5mYw10FUAVUnCZfAiRTC84lLirDcsF7bNm3rWbBj6FR2aCfucX6WTS940vbvt3ajWEEFeT7u+lREFq+PCdqKKB2PYzSdK8VP+lwxVKHMjUrdkLSGkjmRr4TnKrXEHbpgwc4ky6RvGRDFLssRXrYluoufxuBwDxgLxfN9qkbZ2ZeemXVGzSj/EeBt8iIgL1YY0aGSDGynPbTIeaNn9yWqtLXJqWqhwY8fK6OVUkkdVBHx552JAEkO59n+qHLLVPJ7QTMPc3v9PXn8AzabUrBdbZZlFlgH93Lle+sXkbSn/x1WhXgRSlH4mg/B7mOvAvgpbG049MTYX88L3C3jdRNHk8atc/fLCC0z0+mEjwK7CM5X1TcQGopGu/6s=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sigaclouddev.promad.com.mx</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/(S(4qtqtc4u1dceq52ef5puzoeb))/SIGA.aspx?token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHRlbnNpb24iOiJFWFQxIiwic2Vzc2lvblNvY2tldEFudGVyaW9yIjoiIiwicm9sZXNVc3VhcmlvIjpbeyJpZFJvbCI6IjIiLCJpZFJvbFVzdWFyaW8iOiIxMjAiLCJub21icmVSb2wiOiJST0xfT1BFUkFET1IiLCJkZXNjcmlwY2lvbiI6Ik9wZXJhZG9yIn1dLCJ1c2VyX25hbWUiOiJTSUdBMSIsIm5vbWJyZVVzdWFyaW8iOiJVU1VBUklPIiwidXVpZCI6IjUiLCJhdXRob3JpdGllcyI6WyJST0xfT1BFUkFET1IiXSwiY2xpZW50X2lkIjoiYW5ndWxhcmFwcCIsInBhcmFtZXRyb1Npc3RlbWEiOnsiY2xhdmUiOiJUSUVNUE9fTExBTUFEQV9PUEUiLCJkZXNjcmlwY2lvbiI6IlRJRU1QTyBRVUUgVEFSREFSQSBVTkEgTExBTUFEQSBBTCBPUEVSQURPUjogRUwgVkFMT1IgU09OIExPUyBTRUdVTkRPUyIsInZhbG9yIjoiMTAifSwiZGF0b3NFcXVpcG8iOnsiaWRFcXVpcG8iOjEsImlkRXh0ZW5zaW9uVGVsZWZvbmljYSI6MSwibm9tYnJlRXh0ZW5zaW9uIjoiRVhUMSJ9LCJzZXNzaW9uU29ja2V0IjoiMTc3MDEiLCJleHRDYXJieW5lIjoiMCIsImlkX3VzdWFyaW8iOiI2NCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1ODY1ODUxMDEsImp0aSI6ImU1ZjY5MjQ5LWU5MDUtNDkwNS1hNTE1LTBiZjVlMjZkZTQ3YiJ9.fgkml4mEn7zrs2sxMTikIv-IP-D0tipxLe-9g5o5LtaWNd-e_c4uKKjS9AQoT856J4BZIfhY4WmSKEXNyxnnmFto3yG2JeuzKjKG9NPpnd-Qnt97j2FB_P3ywZP5-odakTUKvjEvez_TS0U6BvJp81jA9L0ZkfK3YcY3bueHXYNpwXtLhuV5mKXWtC3MbXkvAHh9aTmlY-xVMjB-INrIf-zWZ7FzhAIPL8zPEzwWx4dClbhtJLtpBNdznTYyioTy6pC-SLdkeycw_Gxxs_vAKkhARCl4exYPuIRIGLayV_XLMrQ3UqMDL4RJrsV-Bcz1spEU8Vy7tZf7TDSzipus3w&amp;role=ROL_DESPACHO&amp;hostname=null</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx/(S(4qtqtc4u1dceq52ef5puzoeb))/SIGA.aspx?token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHRlbnNpb24iOiJFWFQxIiwic2Vzc2lvblNvY2tldEFudGVyaW9yIjoiIiwicm9sZXNVc3VhcmlvIjpbeyJpZFJvbCI6IjIiLCJpZFJvbFVzdWFyaW8iOiIxMjAiLCJub21icmVSb2wiOiJST0xfT1BFUkFET1IiLCJkZXNjcmlwY2lvbiI6Ik9wZXJhZG9yIn1dLCJ1c2VyX25hbWUiOiJTSUdBMSIsIm5vbWJyZVVzdWFyaW8iOiJVU1VBUklPIiwidXVpZCI6IjUiLCJhdXRob3JpdGllcyI6WyJST0xfT1BFUkFET1IiXSwiY2xpZW50X2lkIjoiYW5ndWxhcmFwcCIsInBhcmFtZXRyb1Npc3RlbWEiOnsiY2xhdmUiOiJUSUVNUE9fTExBTUFEQV9PUEUiLCJkZXNjcmlwY2lvbiI6IlRJRU1QTyBRVUUgVEFSREFSQSBVTkEgTExBTUFEQSBBTCBPUEVSQURPUjogRUwgVkFMT1IgU09OIExPUyBTRUdVTkRPUyIsInZhbG9yIjoiMTAifSwiZGF0b3NFcXVpcG8iOnsiaWRFcXVpcG8iOjEsImlkRXh0ZW5zaW9uVGVsZWZvbmljYSI6MSwibm9tYnJlRXh0ZW5zaW9uIjoiRVhUMSJ9LCJzZXNzaW9uU29ja2V0IjoiMTc3MDEiLCJleHRDYXJieW5lIjoiMCIsImlkX3VzdWFyaW8iOiI2NCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1ODY1ODUxMDEsImp0aSI6ImU1ZjY5MjQ5LWU5MDUtNDkwNS1hNTE1LTBiZjVlMjZkZTQ3YiJ9.fgkml4mEn7zrs2sxMTikIv-IP-D0tipxLe-9g5o5LtaWNd-e_c4uKKjS9AQoT856J4BZIfhY4WmSKEXNyxnnmFto3yG2JeuzKjKG9NPpnd-Qnt97j2FB_P3ywZP5-odakTUKvjEvez_TS0U6BvJp81jA9L0ZkfK3YcY3bueHXYNpwXtLhuV5mKXWtC3MbXkvAHh9aTmlY-xVMjB-INrIf-zWZ7FzhAIPL8zPEzwWx4dClbhtJLtpBNdznTYyioTy6pC-SLdkeycw_Gxxs_vAKkhARCl4exYPuIRIGLayV_XLMrQ3UqMDL4RJrsV-Bcz1spEU8Vy7tZf7TDSzipus3w&amp;role=ROL_DESPACHO&amp;hostname=null</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-MX,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BUSCAR_ALCALDIA/gs-guide-websocket/043/iqk4htwo/xhr_send?t=1601504184415-184" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;CONNECT\nuser:1824\naccept-version:1.0,1.1,1.2\nheart-beat:10000,10000\n\n\u0000&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">demos-promad.opensystems.mx</stringProp>
          <stringProp name="HTTPSampler.port">8095</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/gs-guide-websocket/043/iqk4htwo/xhr_send?t=1601504184415</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-MX,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://demos-promad.opensystems.mx:9191</stringProp>
              </elementProp>
              <elementProp name="Content-type" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">text/plain</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BUSCAR_ALCALDIA/gs-guide-websocket/043/iqk4htwo/xhr_send?t=1601504186660-187" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;SUBSCRIBE\nid:sub-0\ndestination:/user/queue/reply\n\n\u0000&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">demos-promad.opensystems.mx</stringProp>
          <stringProp name="HTTPSampler.port">8095</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/gs-guide-websocket/043/iqk4htwo/xhr_send?t=1601504186660</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-MX,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://demos-promad.opensystems.mx:9191</stringProp>
              </elementProp>
              <elementProp name="Content-type" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">text/plain</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BUSCAR_ALCALDIA/SIGAService.svc/GetAddress-197" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;idbusinessunit&quot;:5,&quot;x&quot;:-99.1857132,&quot;y&quot;:19.47926628}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sigaclouddevapi.promad.com.mx</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/SIGAService.svc/GetAddress</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx/(S(4qtqtc4u1dceq52ef5puzoeb))/SIGA.aspx?token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHRlbnNpb24iOiJFWFQxIiwic2Vzc2lvblNvY2tldEFudGVyaW9yIjoiIiwicm9sZXNVc3VhcmlvIjpbeyJpZFJvbCI6IjIiLCJpZFJvbFVzdWFyaW8iOiIxMjAiLCJub21icmVSb2wiOiJST0xfT1BFUkFET1IiLCJkZXNjcmlwY2lvbiI6Ik9wZXJhZG9yIn1dLCJ1c2VyX25hbWUiOiJTSUdBMSIsIm5vbWJyZVVzdWFyaW8iOiJVU1VBUklPIiwidXVpZCI6IjUiLCJhdXRob3JpdGllcyI6WyJST0xfT1BFUkFET1IiXSwiY2xpZW50X2lkIjoiYW5ndWxhcmFwcCIsInBhcmFtZXRyb1Npc3RlbWEiOnsiY2xhdmUiOiJUSUVNUE9fTExBTUFEQV9PUEUiLCJkZXNjcmlwY2lvbiI6IlRJRU1QTyBRVUUgVEFSREFSQSBVTkEgTExBTUFEQSBBTCBPUEVSQURPUjogRUwgVkFMT1IgU09OIExPUyBTRUdVTkRPUyIsInZhbG9yIjoiMTAifSwiZGF0b3NFcXVpcG8iOnsiaWRFcXVpcG8iOjEsImlkRXh0ZW5zaW9uVGVsZWZvbmljYSI6MSwibm9tYnJlRXh0ZW5zaW9uIjoiRVhUMSJ9LCJzZXNzaW9uU29ja2V0IjoiMTc3MDEiLCJleHRDYXJieW5lIjoiMCIsImlkX3VzdWFyaW8iOiI2NCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1ODY1ODUxMDEsImp0aSI6ImU1ZjY5MjQ5LWU5MDUtNDkwNS1hNTE1LTBiZjVlMjZkZTQ3YiJ9.fgkml4mEn7zrs2sxMTikIv-IP-D0tipxLe-9g5o5LtaWNd-e_c4uKKjS9AQoT856J4BZIfhY4WmSKEXNyxnnmFto3yG2JeuzKjKG9NPpnd-Qnt97j2FB_P3ywZP5-odakTUKvjEvez_TS0U6BvJp81jA9L0ZkfK3YcY3bueHXYNpwXtLhuV5mKXWtC3MbXkvAHh9aTmlY-xVMjB-INrIf-zWZ7FzhAIPL8zPEzwWx4dClbhtJLtpBNdznTYyioTy6pC-SLdkeycw_Gxxs_vAKkhARCl4exYPuIRIGLayV_XLMrQ3UqMDL4RJrsV-Bcz1spEU8Vy7tZf7TDSzipus3w&amp;role=ROL_DESPACHO&amp;hostname=null</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-MX,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BUSCAR_ALCALDIA/SIGAService.svc/GetPatrolAreasByCoordinates-218" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;idbusinessunit&quot;:5,&quot;x&quot;:-99.1857132,&quot;y&quot;:19.47926628}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sigaclouddevapi.promad.com.mx</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/SIGAService.svc/GetPatrolAreasByCoordinates</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx/(S(4qtqtc4u1dceq52ef5puzoeb))/SIGA.aspx?token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHRlbnNpb24iOiJFWFQxIiwic2Vzc2lvblNvY2tldEFudGVyaW9yIjoiIiwicm9sZXNVc3VhcmlvIjpbeyJpZFJvbCI6IjIiLCJpZFJvbFVzdWFyaW8iOiIxMjAiLCJub21icmVSb2wiOiJST0xfT1BFUkFET1IiLCJkZXNjcmlwY2lvbiI6Ik9wZXJhZG9yIn1dLCJ1c2VyX25hbWUiOiJTSUdBMSIsIm5vbWJyZVVzdWFyaW8iOiJVU1VBUklPIiwidXVpZCI6IjUiLCJhdXRob3JpdGllcyI6WyJST0xfT1BFUkFET1IiXSwiY2xpZW50X2lkIjoiYW5ndWxhcmFwcCIsInBhcmFtZXRyb1Npc3RlbWEiOnsiY2xhdmUiOiJUSUVNUE9fTExBTUFEQV9PUEUiLCJkZXNjcmlwY2lvbiI6IlRJRU1QTyBRVUUgVEFSREFSQSBVTkEgTExBTUFEQSBBTCBPUEVSQURPUjogRUwgVkFMT1IgU09OIExPUyBTRUdVTkRPUyIsInZhbG9yIjoiMTAifSwiZGF0b3NFcXVpcG8iOnsiaWRFcXVpcG8iOjEsImlkRXh0ZW5zaW9uVGVsZWZvbmljYSI6MSwibm9tYnJlRXh0ZW5zaW9uIjoiRVhUMSJ9LCJzZXNzaW9uU29ja2V0IjoiMTc3MDEiLCJleHRDYXJieW5lIjoiMCIsImlkX3VzdWFyaW8iOiI2NCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1ODY1ODUxMDEsImp0aSI6ImU1ZjY5MjQ5LWU5MDUtNDkwNS1hNTE1LTBiZjVlMjZkZTQ3YiJ9.fgkml4mEn7zrs2sxMTikIv-IP-D0tipxLe-9g5o5LtaWNd-e_c4uKKjS9AQoT856J4BZIfhY4WmSKEXNyxnnmFto3yG2JeuzKjKG9NPpnd-Qnt97j2FB_P3ywZP5-odakTUKvjEvez_TS0U6BvJp81jA9L0ZkfK3YcY3bueHXYNpwXtLhuV5mKXWtC3MbXkvAHh9aTmlY-xVMjB-INrIf-zWZ7FzhAIPL8zPEzwWx4dClbhtJLtpBNdznTYyioTy6pC-SLdkeycw_Gxxs_vAKkhARCl4exYPuIRIGLayV_XLMrQ3UqMDL4RJrsV-Bcz1spEU8Vy7tZf7TDSzipus3w&amp;role=ROL_DESPACHO&amp;hostname=null</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-MX,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BUSCAR_ALCALDIA/SIGAService.svc/GetAddress-238" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;idbusinessunit&quot;:5,&quot;x&quot;:-99.1857132,&quot;y&quot;:19.47926628}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sigaclouddevapi.promad.com.mx</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/SIGAService.svc/GetAddress</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx/(S(4qtqtc4u1dceq52ef5puzoeb))/SIGA.aspx?token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHRlbnNpb24iOiJFWFQxIiwic2Vzc2lvblNvY2tldEFudGVyaW9yIjoiIiwicm9sZXNVc3VhcmlvIjpbeyJpZFJvbCI6IjIiLCJpZFJvbFVzdWFyaW8iOiIxMjAiLCJub21icmVSb2wiOiJST0xfT1BFUkFET1IiLCJkZXNjcmlwY2lvbiI6Ik9wZXJhZG9yIn1dLCJ1c2VyX25hbWUiOiJTSUdBMSIsIm5vbWJyZVVzdWFyaW8iOiJVU1VBUklPIiwidXVpZCI6IjUiLCJhdXRob3JpdGllcyI6WyJST0xfT1BFUkFET1IiXSwiY2xpZW50X2lkIjoiYW5ndWxhcmFwcCIsInBhcmFtZXRyb1Npc3RlbWEiOnsiY2xhdmUiOiJUSUVNUE9fTExBTUFEQV9PUEUiLCJkZXNjcmlwY2lvbiI6IlRJRU1QTyBRVUUgVEFSREFSQSBVTkEgTExBTUFEQSBBTCBPUEVSQURPUjogRUwgVkFMT1IgU09OIExPUyBTRUdVTkRPUyIsInZhbG9yIjoiMTAifSwiZGF0b3NFcXVpcG8iOnsiaWRFcXVpcG8iOjEsImlkRXh0ZW5zaW9uVGVsZWZvbmljYSI6MSwibm9tYnJlRXh0ZW5zaW9uIjoiRVhUMSJ9LCJzZXNzaW9uU29ja2V0IjoiMTc3MDEiLCJleHRDYXJieW5lIjoiMCIsImlkX3VzdWFyaW8iOiI2NCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1ODY1ODUxMDEsImp0aSI6ImU1ZjY5MjQ5LWU5MDUtNDkwNS1hNTE1LTBiZjVlMjZkZTQ3YiJ9.fgkml4mEn7zrs2sxMTikIv-IP-D0tipxLe-9g5o5LtaWNd-e_c4uKKjS9AQoT856J4BZIfhY4WmSKEXNyxnnmFto3yG2JeuzKjKG9NPpnd-Qnt97j2FB_P3ywZP5-odakTUKvjEvez_TS0U6BvJp81jA9L0ZkfK3YcY3bueHXYNpwXtLhuV5mKXWtC3MbXkvAHh9aTmlY-xVMjB-INrIf-zWZ7FzhAIPL8zPEzwWx4dClbhtJLtpBNdznTYyioTy6pC-SLdkeycw_Gxxs_vAKkhARCl4exYPuIRIGLayV_XLMrQ3UqMDL4RJrsV-Bcz1spEU8Vy7tZf7TDSzipus3w&amp;role=ROL_DESPACHO&amp;hostname=null</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-MX,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://sigaclouddev.promad.com.mx</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Ver Árbol de Resultados" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="Servidor Proxy HTTP" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">BUSCAR_ALCALDIA</stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <stringProp name="ProxyControlGui.domains">sigaclouddev.promad.com.mx</stringProp>
      </ProxyControl>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
